
/* This file contains various declaration forms. From RFC-4506. */

typedef int          identifier;
typedef unsigned int identifier;
enum colors { RED, YELLOW, BLUE };
typedef bool      identifier;
typedef hyper     identifier;
typedef unsigned hyper identifier;
typedef float     identifier;
typedef double    identifier;
typedef quadruple identifier;
typedef opaque    identifier[64];
typedef opaque    identifier<64>;
typedef opaque    identifier<>;
typedef string    object<64>;
typedef string    object<>;
typedef int       identifier[64];
typedef int       identifier<64>;
typedef int       identifier<>;

// Ordinary structure definitions are used to define record types.
struct identifier {
    int          identifier;
    unsigned int identifier;
    enum { RED, YELLOW, BLUE } colors;
    bool      identifier;
    hyper     identifier;
    unsigned hyper identifier;
    float     identifier;
    double    identifier;
    quadruple identifier;
    opaque    identifier[64];
    opaque    identifier<64>;
    opaque    identifier<>;
    string    object<64>;
    string    object<>;
    int       identifier[64];
    int       identifier<64>;
    int       identifier<>;
};

// Message structure definitions are used to define message parameters.
message struct -> identifier {
    int          identifier;
    unsigned int identifier;
    enum { RED, YELLOW, BLUE } colors;
    bool      identifier;
    hyper     identifier;
    unsigned hyper identifier;
    float     identifier;
    double    identifier;
    quadruple identifier;
    opaque    identifier[64];
    opaque    identifier<64>;
    opaque    identifier<>;
    string    object<64>;
    string    object<>;
    int       identifier[64];
    int       identifier<64>;
    int       identifier<>;
};
